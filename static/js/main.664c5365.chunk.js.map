{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitItem","e","preventDefault","_this$state","state","newItemTitle","newItemPrice","items","push","title","price","setState","submitDiscount","discount","newDiscount","renderDiscount","index","totalPrice","_this$state2","Math","round","floor","validateProduct","_this$state3","setNewItemTitle","bind","assertThisInitialized","setNewItemPrice","setDiscount","event","target","value","Number","isNaN","validateDiscount","reduce","sum","item","discountIsValid","itemList","map","react_default","a","createElement","key","className","action","onSubmit","type","onChange","disabled","length","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.664c5365.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newItemTitle: '',\r\n      newItemPrice: 0,\r\n\r\n      items: [],\r\n\r\n      newDiscount: 0,\r\n      discount: 0\r\n    };\r\n\r\n    this.setNewItemTitle = this.setNewItemTitle.bind(this);\r\n    this.setNewItemPrice = this.setNewItemPrice.bind(this);\r\n    this.setDiscount = this.setDiscount.bind(this);\r\n  }\r\n\r\n  setNewItemTitle(event) {\r\n    this.setState({\r\n      newItemTitle: event.target.value\r\n    })\r\n  }\r\n\r\n  setNewItemPrice(event) {\r\n    const value = Number(event.target.value);\r\n\r\n    if (isNaN(value)) return false;\r\n\r\n    this.setState({\r\n      newItemPrice: value\r\n    })\r\n  }\r\n\r\n  setDiscount(event) {\r\n    const value = Number(event.target.value);\r\n\r\n    if (isNaN(value)) return false;\r\n\r\n    this.setState({\r\n      newDiscount: value\r\n    })\r\n  }\r\n\r\n  submitItem = e => {\r\n    e.preventDefault();\r\n\r\n    const { newItemTitle, newItemPrice, items } = this.state;\r\n\r\n    items.push({\r\n      title: newItemTitle,\r\n      price: newItemPrice\r\n    });\r\n\r\n    this.setState({\r\n      items,\r\n      newItemTitle: '',\r\n      newItemPrice: 0\r\n    })\r\n  }\r\n\r\n  submitDiscount = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      discount: this.state.newDiscount\r\n    })\r\n  }\r\n\r\n  renderDiscount = (index, totalPrice) => {\r\n    const { items, discount } = this.state;\r\n    const { price } = items[index];\r\n\r\n    return price - Math.round(discount / 100 * Math.floor(price / totalPrice * 100))\r\n  }\r\n\r\n  validateProduct = () => {\r\n    const { newItemTitle, newItemPrice } = this.state;\r\n    return !(newItemTitle && newItemPrice)\r\n  }\r\n\r\n  render() {\r\n    const { state, validateProduct, validateDiscount, submitDiscount, renderDiscount, submitItem, setNewItemTitle, setNewItemPrice, setDiscount } = this;\r\n    const { newItemTitle, newItemPrice, newDiscount, items, discount } = state;\r\n    const totalPrice = items.reduce((sum, item) => sum + item.price, 0);\r\n    const discountIsValid = newDiscount >= totalPrice;\r\n    const itemList = items.map((item, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{item.title}</td>\r\n          <td>{item.price}</td>\r\n          <td>{renderDiscount(index, totalPrice)}</td>\r\n        </tr>\r\n      )\r\n    });\r\n\r\n    const cart = () => {\r\n      if (items.length) {\r\n        return (\r\n          <div>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Продукт</th>\r\n                  <th>Цена</th>\r\n                  <th>Цена со скидкой</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {itemList}\r\n              </tbody>\r\n            </table>\r\n            <form action=\"/\" onSubmit={submitDiscount}>\r\n              <div className=\"inline-input\">\r\n                <label>\r\n                  <span>Применить скидку</span>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={newDiscount}\r\n                    onChange={setDiscount}\r\n                  />\r\n                  <span>рублей</span>\r\n                </label>\r\n                <button disabled={discountIsValid}>Применить</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )\r\n      }\r\n\r\n      return <div className=\"empty-cart\">В корзине нет товаров</div>\r\n    };\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"calc\">\r\n          <div className=\"calc-section\">\r\n          <div className=\"col-wrapper\">\r\n            <div className=\"col\">\r\n              <h2 className=\"header\">Добавить продукт</h2>\r\n              <form action=\"/\" onSubmit={submitItem}>\r\n                <div className=\"input-item\">\r\n                  <label>\r\n                    <div className=\"input-item__label\">Продукт</div>\r\n                    <div className=\"input-item__wrapper\">\r\n                      <input \r\n                        type=\"text\" \r\n                        value={newItemTitle}\r\n                        onChange={setNewItemTitle}\r\n                      />\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n                <div className=\"input-item\">\r\n                  <label>\r\n                    <div className=\"input-item__label\">Цена</div>\r\n                    <div className=\"input-item__wrapper\">\r\n                      <input \r\n                        type=\"text\"\r\n                        value={newItemPrice}\r\n                        onChange={setNewItemPrice}\r\n                      />\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n                <div className=\"input-item\">\r\n                  <label>\r\n                    <div className=\"input-item__label\"></div>\r\n                    <div className=\"input-item__wrapper\">\r\n                      <button disabled={validateProduct()}>Добавить</button>\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"tip\">С помощью этой формы вы можете добавить товары в корзину</div>\r\n            </div>\r\n          </div>\r\n          \r\n          </div>\r\n          <div className=\"calc-section\">\r\n            <div className=\"col-wrapper\">\r\n              <div className=\"col\">\r\n                <h2 className=\"header\">Корзина</h2>\r\n                {cart()}\r\n              </div>\r\n              <div className=\"col\">\r\n                <div className=\"tip\">Скидка для каждой позиции рассчитывается пропорционально цене товара. Скидка всегда в рублях без копеек. Сумма скидок по каждому товару всегда точно равна общей сумме. При округлении остаток суммы применяется к самому дорогому товару в корзине.</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}